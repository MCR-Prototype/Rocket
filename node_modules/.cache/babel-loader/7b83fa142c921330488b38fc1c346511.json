{"remainingRequest":"F:\\prototype-vue\\node_modules\\babel-loader\\lib\\index.js!F:\\prototype-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\prototype-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\prototype-vue\\src\\views\\ViewDevExpressGridTesting.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\prototype-vue\\src\\views\\ViewDevExpressGridTesting.vue","mtime":1579696298159},{"path":"F:\\prototype-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\prototype-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\prototype-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\prototype-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgImRldmV4dHJlbWUvZGF0YS9vZGF0YS9zdG9yZSI7CmltcG9ydCBBcHBOYXZpZ2F0aW9uIGZyb20gIkAvY29tcG9uZW50cy9BcHBOYXZpZ2F0aW9uL0FwcE5hdmlnYXRpb24iOwppbXBvcnQgeyBEeENvbHVtbiwgRHhEYXRhR3JpZCwgRHhFZGl0aW5nLCBEeEZpbHRlclJvdywgRHhQYWdlciwgRHhQYWdpbmcgfSBmcm9tICJkZXZleHRyZW1lLXZ1ZS9kYXRhLWdyaWQiOwppbXBvcnQgQ3VzdG9tU3RvcmUgZnJvbSAiZGV2ZXh0cmVtZS9kYXRhL2N1c3RvbV9zdG9yZSI7CmltcG9ydCAid2hhdHdnLWZldGNoIjsKCmZ1bmN0aW9uIGlzTm90RW1wdHkodmFsdWUpIHsKICByZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSAhPT0gbnVsbCAmJiB2YWx1ZSAhPT0gIiI7Cn0KCnZhciBzdG9yZSA9IG5ldyBDdXN0b21TdG9yZSh7CiAga2V5OiAiSWQiLAogIGxvYWQ6IGZ1bmN0aW9uIGxvYWQobG9hZE9wdGlvbnMpIHsKICAgIGxvYWRPcHRpb25zLiR0b3AgPSBsb2FkT3B0aW9ucy50YWtlOwogICAgbG9hZE9wdGlvbnMuJHNraXAgPSBsb2FkT3B0aW9ucy5za2lwOwogICAgbG9hZE9wdGlvbnMuJGNvdW50ID0gdHJ1ZTsKICAgIHZhciBwYXJhbXMgPSAiPyI7CiAgICBbIiRza2lwIiwgIiRjb3VudCIsIC8vICd0YWtlJywKICAgIC8vICdyZXF1aXJlVG90YWxDb3VudCcsCiAgICAicmVxdWlyZUdyb3VwQ291bnQiLCAic29ydCIsICJmaWx0ZXIiLCAidG90YWxTdW1tYXJ5IiwgImdyb3VwIiwgImdyb3VwU3VtbWFyeSIsICIkdG9wIl0uZm9yRWFjaChmdW5jdGlvbiAoaSkgewogICAgICBpZiAoaSBpbiBsb2FkT3B0aW9ucyAmJiBpc05vdEVtcHR5KGxvYWRPcHRpb25zW2ldKSkgewogICAgICAgIHBhcmFtcyArPSAiIi5jb25jYXQoaSwgIj0iKS5jb25jYXQoSlNPTi5zdHJpbmdpZnkobG9hZE9wdGlvbnNbaV0pLCAiJiIpOwogICAgICB9CiAgICB9KTsKICAgIHBhcmFtcyA9IHBhcmFtcy5zbGljZSgwLCAtMSk7CiAgICByZXR1cm4gZmV0Y2goImh0dHA6Ly8xMC4xLjQuMzM6ODA4MS9UZXN0U3RvcmVzIi5jb25jYXQocGFyYW1zKSkgLy8gcmV0dXJuIGZldGNoKGBodHRwczovL2pzLmRldmV4cHJlc3MuY29tL0RlbW9zL1dpZGdldHNHYWxsZXJ5RGF0YVNlcnZpY2UvYXBpL29yZGVycyR7cGFyYW1zfWApCiAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBkYXRhOiBkYXRhLnZhbHVlLAogICAgICAgIHRvdGFsQ291bnQ6IGRhdGFbIkBvZGF0YS5jb3VudCJdIC8vIHN1bW1hcnk6IGRhdGEuc3VtbWFyeSwKICAgICAgICAvLyBncm91cENvdW50OiBkYXRhLmdyb3VwQ291bnQKCiAgICAgIH07CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgIHRocm93ICJEYXRhIExvYWRpbmcgRXJyb3IiOwogICAgfSk7CiAgfQp9KTsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEFwcE5hdmlnYXRpb246IEFwcE5hdmlnYXRpb24sCiAgICBEeERhdGFHcmlkOiBEeERhdGFHcmlkLAogICAgRHhDb2x1bW46IER4Q29sdW1uLAogICAgRHhQYWdlcjogRHhQYWdlciwKICAgIER4UGFnaW5nOiBEeFBhZ2luZywKICAgIER4RWRpdGluZzogRHhFZGl0aW5nLAogICAgRHhGaWx0ZXJSb3c6IER4RmlsdGVyUm93CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YVNvdXJjZTogc3RvcmUsCiAgICAgIGN1cnJlbnRTZWxlY3Rpb246IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblNlbGVjdGlvbkNoYW5nZWQ6IGZ1bmN0aW9uIG9uU2VsZWN0aW9uQ2hhbmdlZChzZWxlY3Rpb25EYXRhKSB7CiAgICAgIHZhciBkYXRhID0gc2VsZWN0aW9uRGF0YS5zZWxlY3RlZFJvd3NEYXRhWzBdOwogICAgICB0aGlzLmN1cnJlbnRTZWxlY3Rpb24gPSBkYXRhOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ViewDevExpressGridTesting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAA,6BAAA;AACA,OAAA,aAAA,MAAA,0CAAA;AACA,SAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,OAAA,EAAA,QAAA,QAAA,0BAAA;AACA,OAAA,WAAA,MAAA,8BAAA;AACA,OAAA,cAAA;;AAEA,SAAA,UAAA,CAAA,KAAA,EAAA;AACA,SAAA,KAAA,KAAA,SAAA,IAAA,KAAA,KAAA,IAAA,IAAA,KAAA,KAAA,EAAA;AACA;;AAEA,IAAA,KAAA,GAAA,IAAA,WAAA,CAAA;AACA,EAAA,GAAA,EAAA,IADA;AAEA,EAAA,IAAA,EAAA,cAAA,WAAA,EAAA;AACA,IAAA,WAAA,CAAA,IAAA,GAAA,WAAA,CAAA,IAAA;AACA,IAAA,WAAA,CAAA,KAAA,GAAA,WAAA,CAAA,IAAA;AACA,IAAA,WAAA,CAAA,MAAA,GAAA,IAAA;AACA,QAAA,MAAA,GAAA,GAAA;AACA,KACA,OADA,EAEA,QAFA,EAGA;AACA;AACA,uBALA,EAMA,MANA,EAOA,QAPA,EAQA,cARA,EASA,OATA,EAUA,cAVA,EAWA,MAXA,EAYA,OAZA,CAYA,UAAA,CAAA,EAAA;AACA,UAAA,CAAA,IAAA,WAAA,IAAA,UAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AACA,QAAA,MAAA,cAAA,CAAA,cAAA,IAAA,CAAA,SAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AACA;AACA,KAhBA;AAiBA,IAAA,MAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,WACA,KAAA,2CAAA,MAAA,EAAA,CACA;AADA,KAEA,IAFA,CAEA,UAAA,QAAA;AAAA,aAAA,QAAA,CAAA,IAAA,EAAA;AAAA,KAFA,EAGA,IAHA,CAGA,UAAA,IAAA,EAAA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,IAAA,CAAA,KADA;AAEA,QAAA,UAAA,EAAA,IAAA,CAAA,cAAA,CAFA,CAGA;AACA;;AAJA,OAAA;AAMA,KAVA,EAWA,KAXA,CAWA,YAAA;AACA,YAAA,oBAAA;AACA,KAbA,CADA;AAgBA;AAzCA,CAAA,CAAA;AA4CA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,UAAA,EAAA,UAFA;AAGA,IAAA,QAAA,EAAA,QAHA;AAIA,IAAA,OAAA,EAAA,OAJA;AAKA,IAAA,QAAA,EAAA,QALA;AAMA,IAAA,SAAA,EAAA,SANA;AAOA,IAAA,WAAA,EAAA;AAPA,GADA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,gBAAA,EAAA;AAFA,KAAA;AAIA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,kBAAA,EAAA,4BAAA,aAAA,EAAA;AACA,UAAA,IAAA,GAAA,aAAA,CAAA,gBAAA,CAAA,CAAA,CAAA;AACA,WAAA,gBAAA,GAAA,IAAA;AACA;AAJA;AAhBA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <app-navigation />\r\n    <div v-if=\"currentSelection\">\r\n      <p>Name: {{ currentSelection.Name }}</p>\r\n      <p>Straße: {{ currentSelection.Street }}</p>\r\n      <p>PLZ: {{ currentSelection.CityCode }}</p>\r\n      <p>Stadt: {{ currentSelection.CityName }}</p>\r\n      <p>Telefon: {{ currentSelection.Phone }}</p>\r\n    </div>\r\n    <DxDataGrid\r\n      :data-source=\"dataSource\"\r\n      :show-borders=\"true\"\r\n      :remote-operations=\"true\"\r\n      :selection=\"{ mode: 'multiple' }\"\r\n      :hover-state-enabled=\"true\"\r\n      @selection-changed=\"onSelectionChanged\"\r\n    >\r\n      <DxFilterRow :visible=\"showFilterRow\" :apply-filter=\"currentFilter\" />\r\n      <DxEditing :allow-updating=\"true\" mode=\"form\" />\r\n      <DxColumn data-field=\"Id\" caption=\"ID\" data-type=\"number\" />\r\n      <DxColumn data-field=\"Name\" caption=\"Name\" data-type=\"string\" />\r\n      <DxColumn data-field=\"Street\" caption=\"Straße\" data-type=\"string\" />\r\n      <DxColumn data-field=\"CityCode\" caption=\"PLZ\" data-type=\"number\" />\r\n      <DxColumn data-field=\"CityName\" caption=\"Stadt\" data-type=\"string\" />\r\n      <DxColumn\r\n        data-field=\"Phone\"\r\n        caption=\"Tel. Nr.\"\r\n        data-type=\"string\"\r\n        :header-filter=\"{ allowSearch: true }\"\r\n      />\r\n      <DxPaging :page-size=\"3\" />\r\n      <DxPager\r\n        :show-page-size-selector=\"true\"\r\n        :allowed-page-sizes=\"[10, 20, 50, 100]\"\r\n      />\r\n    </DxDataGrid>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import \"devextreme/data/odata/store\";\r\n  import AppNavigation from \"@/components/AppNavigation/AppNavigation\";\r\n  import {DxColumn, DxDataGrid, DxEditing, DxFilterRow, DxPager, DxPaging} from \"devextreme-vue/data-grid\";\r\n  import CustomStore from \"devextreme/data/custom_store\";\r\n  import \"whatwg-fetch\";\r\n\r\n  function isNotEmpty(value) {\r\n  return value !== undefined && value !== null && value !== \"\";\r\n}\r\n\r\nconst store = new CustomStore({\r\n  key: \"Id\",\r\n  load: function(loadOptions) {\r\n    loadOptions.$top = loadOptions.take;\r\n    loadOptions.$skip = loadOptions.skip;\r\n    loadOptions.$count = true;\r\n    let params = \"?\";\r\n    [\r\n      \"$skip\",\r\n      \"$count\",\r\n      // 'take',\r\n      // 'requireTotalCount',\r\n      \"requireGroupCount\",\r\n      \"sort\",\r\n      \"filter\",\r\n      \"totalSummary\",\r\n      \"group\",\r\n      \"groupSummary\",\r\n      \"$top\"\r\n    ].forEach(function(i) {\r\n      if (i in loadOptions && isNotEmpty(loadOptions[i])) {\r\n        params += `${i}=${JSON.stringify(loadOptions[i])}&`;\r\n      }\r\n    });\r\n    params = params.slice(0, -1);\r\n    return (\r\n      fetch(`http://10.1.4.33:8081/TestStores${params}`)\r\n        // return fetch(`https://js.devexpress.com/Demos/WidgetsGalleryDataService/api/orders${params}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          return {\r\n            data: data.value,\r\n            totalCount: data[\"@odata.count\"]\r\n            // summary: data.summary,\r\n            // groupCount: data.groupCount\r\n          };\r\n        })\r\n        .catch(() => {\r\n          throw \"Data Loading Error\";\r\n        })\r\n    );\r\n  }\r\n});\r\n\r\nexport default {\r\n  components: {\r\n    AppNavigation,\r\n    DxDataGrid,\r\n    DxColumn,\r\n    DxPager,\r\n    DxPaging,\r\n    DxEditing,\r\n    DxFilterRow\r\n  },\r\n  data() {\r\n    return {\r\n      dataSource: store,\r\n      currentSelection: null\r\n    };\r\n  },\r\n  methods: {\r\n    onSelectionChanged: function(selectionData) {\r\n      let data = selectionData.selectedRowsData[0];\r\n      this.currentSelection = data;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"],"sourceRoot":"src/views"}]}